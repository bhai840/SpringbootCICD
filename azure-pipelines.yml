# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:

trigger:
- master

pool: Default

#pool: 
#  vmImage: 'ubuntu-latest'


stages: 
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    continueOnError: true
    workspace:
      clean: outputs
  #  pool: Default
      
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        Set JAVA_HOME by: 'JDK Version'
        JDK path: '/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b10-0.el8_0.x86_64'
       # javaHomeOption: 'JDKVersion'
        JDK Version: 'JDK 1.8'
      #  jdkVersionOption: '1.8'
       # jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
 #   - task: CopyFiles@2
 #     displayName: 'Copy Files to artifact staging directory'
 #     inputs:
 #       SourceFolder: '$(System.DefaultWorkingDirectory)'
 #       Contents: '**/target/*.?(war|jar)'
 #       TargetFolder: $(Build.ArtifactStagingDirectory)
    #- upload: $(Build.ArtifactStagingDirectory)
   #   artifact: drop
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact'
      inputs:
        artifactName: 'springboot_artifact' 
        targetPath: '$(System.DefaultWorkingDirectory)'
  #  - task: DownloadPipelineArtifact@0
  #    inputs:
  #      artifactName: snallari0675
       # patterns: '**/target/*.?(war|jar)'
 #       targetPath: $(Build.SourcesDirectory)
 #     continueOnError: true
 #   - script: |
 #       echo $JAVA_HOME
      
    - task: SSH@0
      displayName: 'Deployment'
      inputs:
        sshEndpoint: rahulssh
        commands: |
          echo $JAVA_HOME
          which java > /dev/null
          echo $?
        
          



# below steps are for microsoft hosted agent
#pool: 
#  vmImage: 'ubuntu-latest'

#steps:
#- script: mvn clean install
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo successfully built
#  displayName: 'Run a multi-line script'
