apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: pipeline-springboot
  namespace: payments-dev
  labels:
    app: pipeline-springboot
    service: ${ServiceName}    ###ServiceName
    env: nonprod
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: pipeline-springboot
      namespace: ${Kuberntes-NameSpace}     ## Kubernets namespace
      annotations:
        imagelabel: latest
      labels:
        app: pipeline-springboot
        service: ${ServiceName}
        env: nonprod
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                namespaces:
                  - pipeline-springboot
                topologyKey: failure-domain.beta.kubernetes.io/zone
                labelSelector:
                  matchLabels:
                    app: pipeline-hello-world
                    service: ${ServiceName}     # K8s ServiceName
                    env: nonprod
      containers:
        - envFrom:
            - configMapRef:
                name: pipeline-springboot-nonprod
            - secretRef:
                name: pipeline-springboot-nonprod
          #image: <AccountNumber>.dkr.ecr.us-west-2.amazonaws.com/pipeline:latest       #ECS Docker Image repo link
          image: rahulnallari/microservice-springboot:$BUILD_NUMBER
##above image is based on your ECS generated
          imagePullPolicy: Always
          livenessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 15
            timeoutSeconds: 2
          name: pipeline-springboot-nonprod
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: servicetoken
              mountPath: /pipeline-springboot/servicetoken
            - name: certificate
              mountPath: /pipeline-springboot/certificate
          workingDir: /pipeline-springboot
      volumes:
        - name: servicetoken
          secret:
            secretName: pipeline-springboot jenkins
        - name: certificate
          secret:
            secretName: pipeline-springboot jenkins
